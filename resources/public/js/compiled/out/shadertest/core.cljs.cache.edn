;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name shadertest.core, :imports nil, :requires {sxhr simple-xhr, simple-xhr simple-xhr, string clojure.string, clojure.string clojure.string}, :uses nil, :defs {mat {:name shadertest.core/mat, :file "src\\cljs\\shadertest\\core.cljs", :line 88, :column 1, :end-line 88, :end-column 9, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 88, :column 6, :end-line 88, :end-column 9}}, clock {:name shadertest.core/clock, :file "src\\cljs\\shadertest\\core.cljs", :line 59, :column 1, :end-line 59, :end-column 11, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 59, :column 6, :end-line 59, :end-column 11}}, moused {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 119, :column 7, :end-line 119, :end-column 13, :arglists (quote ([evt]))}, :name shadertest.core/moused, :variadic false, :file "src\\cljs\\shadertest\\core.cljs", :end-column 13, :method-params ([evt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([evt]))}, main {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 133, :column 16, :end-line 133, :end-column 20, :export true, :arglists (quote ([]))}, :name shadertest.core/main, :variadic false, :file "src\\cljs\\shadertest\\core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, uris {:name shadertest.core/uris, :file "src\\cljs\\shadertest\\core.cljs", :line 11, :column 1, :end-line 11, :end-column 10, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 11, :column 6, :end-line 11, :end-column 10}}, stats {:name shadertest.core/stats, :file "src\\cljs\\shadertest\\core.cljs", :line 55, :column 1, :end-line 55, :end-column 11, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 55, :column 6, :end-line 55, :end-column 11}}, get-shadertoy {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 34, :column 7, :end-line 34, :end-column 20, :arglists (quote ([cb]))}, :name shadertest.core/get-shadertoy, :variadic false, :file "src\\cljs\\shadertest\\core.cljs", :end-column 20, :method-params ([cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cb]))}, scene {:name shadertest.core/scene, :file "src\\cljs\\shadertest\\core.cljs", :line 74, :column 1, :end-line 74, :end-column 11, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 74, :column 6, :end-line 74, :end-column 11}}, tobject {:name shadertest.core/tobject, :file "src\\cljs\\shadertest\\core.cljs", :line 94, :column 1, :end-line 94, :end-column 13, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 94, :column 6, :end-line 94, :end-column 13}}, clickc {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 104, :column 7, :end-line 104, :end-column 13, :arglists (quote ([evt]))}, :name shadertest.core/clickc, :variadic false, :file "src\\cljs\\shadertest\\core.cljs", :end-column 13, :method-params ([evt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([evt]))}, mouseu {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 125, :column 7, :end-line 125, :end-column 13, :arglists (quote ([evt]))}, :name shadertest.core/mouseu, :variadic false, :file "src\\cljs\\shadertest\\core.cljs", :end-column 13, :method-params ([evt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([evt]))}, mainloop {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 98, :column 7, :end-line 98, :end-column 15, :arglists (quote ([]))}, :name shadertest.core/mainloop, :variadic false, :file "src\\cljs\\shadertest\\core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, unis {:name shadertest.core/unis, :file "src\\cljs\\shadertest\\core.cljs", :line 9, :column 1, :end-line 9, :end-column 10, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 9, :column 6, :end-line 9, :end-column 10}}, w {:name shadertest.core/w, :file "src\\cljs\\shadertest\\core.cljs", :line 66, :column 1, :end-line 66, :end-column 7, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 66, :column 6, :end-line 66, :end-column 7}}, mousem {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 113, :column 7, :end-line 113, :end-column 13, :arglists (quote ([evt]))}, :name shadertest.core/mousem, :variadic false, :file "src\\cljs\\shadertest\\core.cljs", :end-column 13, :method-params ([evt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([evt]))}, THREE {:name shadertest.core/THREE, :file "src\\cljs\\shadertest\\core.cljs", :line 57, :column 1, :end-line 57, :end-column 11, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 57, :column 6, :end-line 57, :end-column 11}}, renderer {:name shadertest.core/renderer, :file "src\\cljs\\shadertest\\core.cljs", :line 80, :column 1, :end-line 80, :end-column 14, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 80, :column 6, :end-line 80, :end-column 14}}, h {:name shadertest.core/h, :file "src\\cljs\\shadertest\\core.cljs", :line 68, :column 1, :end-line 68, :end-column 7, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 68, :column 6, :end-line 68, :end-column 7}}, parse {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 13, :column 7, :end-line 13, :end-column 12, :arglists (quote ([shadertoy]))}, :name shadertest.core/parse, :variadic false, :file "src\\cljs\\shadertest\\core.cljs", :end-column 12, :method-params ([shadertoy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([shadertoy]))}, tuniform {:name shadertest.core/tuniform, :file "src\\cljs\\shadertest\\core.cljs", :line 61, :column 1, :end-line 61, :end-column 14, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 61, :column 6, :end-line 61, :end-column 14}}, initStats {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 46, :column 7, :end-line 46, :end-column 16, :arglists (quote ([]))}, :name shadertest.core/initStats, :variadic false, :file "src\\cljs\\shadertest\\core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, camera {:name shadertest.core/camera, :file "src\\cljs\\shadertest\\core.cljs", :line 76, :column 1, :end-line 76, :end-column 12, :meta {:file "d:\\workspace\\projects\\shadertest\\src\\cljs\\shadertest\\core.cljs", :line 76, :column 6, :end-line 76, :end-column 12}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:vertexShader :antialias :renderpass :uniforms :method :value :Shader :iMouse :type :iResolution :inputs :url :code :complete :Error :keywordize-keys :iTime :fragmentShader}, :order [:Error :renderpass :Shader :code :inputs :url :method :complete :keywordize-keys :iTime :iResolution :iMouse :type :value :antialias :uniforms :vertexShader :fragmentShader]}, :doc nil}